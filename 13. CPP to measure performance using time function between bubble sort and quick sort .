#include <iostream>
#include <ctime>
using namespace std;

void bubbleSort(int a[], int n) {
    for (int i = 0; i < n - 1; i++)
        for (int j = 0; j < n - i - 1; j++)
            if (a[j] > a[j + 1])
                swap(a[j], a[j + 1]);
}

int partition(int a[], int l, int h) {
    int p = a[l], i = l, j = h;
    while (i < j) {
        while (a[i] <= p)
        i++;
        while (a[j] > p)
         j--;
        if (i < j)
         swap(a[i], a[j]);
    }
    swap(a[l], a[j]);
    return j;
}

void quickSort(int a[], int l, int h) {
    if (l < h) {
        int p = partition(a, l, h);
        quickSort(a, l, p - 1);
        quickSort(a, p + 1, h);
    }
}

int main() {
    int n;
    cout << "Enter array size: ";
    cin >> n;

    int a[n], b[n], q[n];
    cout << "Enter array elements: ";
    for (int i = 0; i < n; i++) {
        cin >> a[i];
        b[i] = q[i] = a[i];
    }

    clock_t s1 = clock(); bubbleSort(b, n); clock_t e1 = clock();
    clock_t s2 = clock(); quickSort(q, 0, n - 1); clock_t e2 = clock();

    cout << "\nTime complexity of Bubble Sort: "
         << double(e1 - s1) / CLOCKS_PER_SEC << " seconds" << endl;
    cout << "Time complexity of Quick Sort: "
         << double(e2 - s2) / CLOCKS_PER_SEC << " seconds" << endl;

    return 0;
}
