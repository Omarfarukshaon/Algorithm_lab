#include <iostream>
#include <vector>
using namespace std;

void greedyColoring(vector<vector<int>>& graph, int V) {
    vector<int> result(V, -1); 
    result[0] = 0; 
    vector<bool> available(V, false); 

    cout << "\nColoring process:\n";
    cout << "Vertex 0 ---> Color 0\n";

    for (int u = 1; u < V; u++) {
        for (int i : graph[u]) {
            if (result[i] != -1) {
                available[result[i]] = true;
            }
        }

        int cr;
        for (cr = 0; cr < V; cr++) {
            if (!available[cr])
                break;
        }

        result[u] = cr;
        cout << "Vertex " << u << " ---> Color " << cr << endl;

        for (int i : graph[u]) {
            if (result[i] != -1) {
                available[result[i]] = false;
            }
        }
    }
}

int main() {
    int V, E;
    cout << "Enter number of vertices: ";
    cin >> V;
    cout << "Enter number of edges: ";
    cin >> E;

    vector<vector<int>> graph(V);

    cout << "Enter each edge (u v):\n";
    for (int i = 0; i < E; i++) {
        int u, v;
        cin >> u >> v;
        graph[u].push_back(v);
        graph[v].push_back(u); 
    }

    greedyColoring(graph, V);
    return 0;
}
